<d:chapter version="5.0" xmlns:d="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:mml="http://www.w3.org/1998/Math/MathML">
  <?xml-stylesheet href="../css/style.css" type="text/css"?>
    <?dbhtml filename="ctypes/index.html" ?>
    <d:title>Character Handling &amp;lt;ctype.h></d:title>
    <d:para>The header <d:code>&amp;lt;ctype.h></d:code> declares several functions
    useful for classifying and mapping characters. In all cases the argument is
    an int, the value of which shall be representable as an unsigned char or
    shall equal the value of the macro EOF. If the argument has any other
    value, the behavior is undefined.</d:para>
    <d:para>The behavior of these functions is affected by the current
    locale. Those functions that have locale-specific aspects only when not in
    the "C" locale are noted below.</d:para>
    <d:para>The term printing character refers to a member of a locale-specific
    set of characters, each of which occupies one printing position on a
    display device; the term control character refers to a member of a
    locale-specific set of characters that are not printing
    characters.<d:footnote><d:para>In an implementation that uses the seven-bit
    US ASCII character set, the printing characters are those whose values lie
    from <d:code>0x20 (space)</d:code> through <d:code>0x7E (tilde)</d:code>;
    the control characters are those whose values lie from <d:code>0
    (NUL)</d:code> through <d:code>0x1F (US)</d:code>, and the character
    <d:code>0x7F (DEL)</d:code>.</d:para></d:footnote> All letters and digits
    are printing characters.</d:para>
    <d:para><d:emphasis role="bold">Forward references: </d:emphasis>EOF
    (14.19.1), localization (14.11).</d:para>
    <d:sect1>
      <d:title>Character classification functions</d:title>
      <d:para>The functions in this subclause return nonzero (true) if and only
      if the value of the argument c conforms to that in the description of the
      function.</d:para>
      <d:sect2>
	<d:title>The isalnum functions</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isalnum(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isalnum</d:code> function tests for any character for which
<d:code>isalpha</d:code> or <d:code>isdigit</d:code> is true.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isalnum(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for an alphanumeric character; it is equivalent to
<d:code>(isalpha(c) || isdigit(c))</d:code>.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c='c', c1=9, c2='$', c3='9';

  printf("%d %d %d %d\n", isalnum(c), isalnum(c1), isalnum(c2), isalnum(c3));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>8 0 0 8</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isalpha function</d:title>
	<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isalpha(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isalpha</d:code> function tests for any character for which
<d:code>isupper</d:code> or <d:code>islower</d:code> is true, or any character
that is one of a locale-specific set of alphabetic characters for which none of
<d:code>iscntrl, isdigit, ispunct</d:code> or <d:code>isspace</d:code> is
true. In the "C" locale, <d:code>isalpha</d:code> returns true only for the
characters for which <d:code>isupper</d:code> or <d:code>islower</d:code> is
<d:code>true</d:code>.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isalpha(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for an alphabetic character; in the standard "C" locale, it is
equivalent to <d:code>(isupper(c) || islower(c))</d:code>. In some locales,
there may be additional characters for which <d:code>isalpha()</d:code> is
true—letters which are neither upper case nor lower case.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code></d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c='c', c1=9, c2='$', c3='9';

  printf("%d %d %d %d\n", isalpha(c), isalpha(c1), isalpha(c2), isalpha(c3));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>1024 0 0 0</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isblank function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isblank(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isblank</d:code> function tests for any character that is a
standard blank character or is one of a locale-specific set of characters for
which isspace is true and that is used to separate words within a line of
text. The standard blank characters are the following: space (' ' ), and
horizontal tab ('\t'). In the "C" locale, isblank returns true only for the
standard blank characters.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isblank(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for a blank character; that is, a space or a tab.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c=' ', c1='\n', c2='   ', c3='9';

  printf("%d %d %d %d\n", isblank(c), isblank(c1), isblank(c2), isblank(c3));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>1 0 1 0</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The iscntrl function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int iscntrl(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>iscntrl</d:code> function tests for any control
character.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int iscntrl(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for a control character.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c=0;  //NUL
  char c1=1; //SOH or ctrl-A
  char c2=3; //STX or ctrl-B
  char c3=4; //ETX or ctrl-C

  printf("%d %d %d %d\n", iscntrl(c), iscntrl(c1), iscntrl(c2), iscntrl(c3));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>2 2 2 2</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isdigit function</d:title>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isdigit(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isdigit</d:code> function tests for any decimal-digit
character.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isdigit(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for a digit (0 through 9).</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='a', c2='1';

  printf("%d %d\n", isdigit(c1), isdigit(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>0 2048</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isgraph function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isgraph(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isgraph</d:code> function tests for any printing character
except space (‘ ‘).</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isgraph(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for any printable character except space.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='a', c2=' ';

  printf("%d %d\n", isgraph(c1), isgraph(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>32768 0</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The islower function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int islower(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>islower</d:code> function tests for any character that is a
lowercase letter or is one of a locale-specific set of characters for which
none of <d:code>iscntrl, isdigit, ispunct</d:code> or <d:code>isspace</d:code>
is true. In the "C" locale, <d:code>islower</d:code> returns true only for the
lowercase letters</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int islower(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for a lower-case character.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='a', c2=' ';

  printf("%d %d\n", islower(c1), islower(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>512 0</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isprint function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isprint(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isprint</d:code> function tests for any printing character
including space (' ').</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isprint(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for any printable character including space.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='a', c2=0;

  printf("%d %d\n", isprint(c1), isprint(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>16384 0</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The ispunct function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int ispunct(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>ispunct</d:code> function tests for any printing character
that is one of a locale-specific set of punctuation characters for which
neither isspace nor isalnum is true. In the "C" locale,
<d:code>ispunct</d:code> returns true for every printing character for which
neither <d:code>isspace</d:code> nor <d:code>isalnum</d:code> is true.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int ispunct(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for any printable character which is not a space or an
alphanumeric character.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='a', c2=';';

  printf("%d %d\n", ispunct(c1), ispunct(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>0 4</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isspace function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isspace(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isspace</d:code> function tests for any character that is a
standard white-space character or is one of a locale-specific set of characters
for which isalnum is false. The standard white-space characters are the
following: space (' '), form feed ('\f'), new-line ('\n'), carriage return
('\r'), horizontal tab ('\t'), and vertical tab ('\v'). In the "C" locale,
<d:code>isspace</d:code> returns true only for the standard white-space
characters.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isspace(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for white-space characters. In the "C" and "POSIX" locales,
these are: space, form-feed ('\f'), newline ('\n'), carriage return ('\r'),
horizontal tab ('\t'), and vertical tab ('\v').</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='\n', c2=';';

  printf("%d %d\n", isspace(c1), isspace(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>8192 0</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isupper function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isupper(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isupper</d:code> function tests for any character that is
an uppercase letter or is one of a locale-specific set of characters for which
none of <d:code>iscntrl, isdigit, ispunct</d:code> or <d:code>isspace</d:code>
is true. In the "C" locale, <d:code>isupper</d:code> returns true only for the
uppercase letters.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isupper(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for an uppercase letter.</d:para>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='A', c2=';';

  printf("%d %d\n", isupper(c1), isupper(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>256 0</d:screen>
      </d:sect2>
      <d:sect2>
	<d:title>The isxdigit function</d:title>
	<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
	<d:programlisting role="CLexer">#include &lt;ctype.h>
int isxdigit(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>The <d:code>isxdigit</d:code> function tests for any hexadecimal-digit
character.</d:para>
<d:para><d:emphasis role="bold">Synopsis</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;ctype.h>
int isxdigit(int c);</d:programlisting>
<d:para><d:emphasis role="bold">Description</d:emphasis></d:para>
<d:para>Checks for a hexadecimal digits, that is, one of:</d:para>
<d:screen>0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F.</d:screen>
<d:para><d:emphasis role="bold">Returns</d:emphasis></d:para>
<d:para>The values returned are nonzero if the character <d:code>c</d:code>
falls into the tested class, and a zero value if not.</d:para>
<d:para><d:emphasis role="bold">Example</d:emphasis></d:para>
<d:programlisting role="CLexer">#include &lt;stdio.h>
#include &lt;ctype.h>

int main()
{
  char c1='a', c2=';';

  printf("%d %d\n", isxdigit(c1), isxdigit(c2));

  return 0;
}</d:programlisting>
and the output is:
<d:screen>4096 0</d:screen>
      </d:sect2>
    </d:sect1>
</d:chapter>
