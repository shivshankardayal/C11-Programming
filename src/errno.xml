<d:chapter version="5.0" xmlns:d="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:mml="http://www.w3.org/1998/Math/MathML">
  <?xml-stylesheet href="../css/style.css" type="text/css"?>
    <?dbhtml filename="errno/index.html" ?>
    <d:title>Errors &lt;errno.h&gt;</d:title>
    <d:para>The header &lt;errno.h&gt; defines several macros, all relating to
    the reporting of error conditions.</d:para>
    <d:para>The macros are:</d:para>
    <d:indexterm>
      <d:primary>macro</d:primary>
      <d:secondary>EDOM</d:secondary>
    </d:indexterm>
    <d:indexterm>
      <d:primary>macro</d:primary>
      <d:secondary>EILSEQ</d:secondary>
    </d:indexterm>
    <d:indexterm>
      <d:primary>macro</d:primary>
      <d:secondary>ERANGE</d:secondary>
    </d:indexterm>
    <d:blockquote><d:para><d:code>EDOM</d:code></d:para></d:blockquote>
    <d:blockquote><d:para><d:code>EILSEQ</d:code></d:para></d:blockquote>
    <d:blockquote><d:para><d:code>ERANGE</d:code></d:para></d:blockquote>
    <d:para>which expand to integer constant expressions with type
    <d:code>int</d:code>, distinct positive values, and which are suitable for
    use in <d:code>#if</d:code> preprocessing directives; and
    <d:indexterm>
      <d:primary>macro</d:primary>
      <d:secondary>errno</d:secondary>
    </d:indexterm>
    <d:blockquote>
      <d:para><d:code>errno</d:code></d:para>
    </d:blockquote>
     which expands to a modifiable
    lvalue<d:footnote><d:para>The macro errno need not be the identifier of an
    object. It might expand to a modifiable lvalue resulting from a function
    call (for example, <d:code>*errno()</d:code>).</d:para></d:footnote>
    that has type <d:code>int</d:code>, the value of which is set to a positive
    error number by several library functions. It is unspecified whether
    <d:code>errno</d:code> is a macro or an identifier declared with external
    linkage. If a macro definition is suppressed in order to access an actual
    object, or a program defines an identifier with the name errno, the
    behavior is undefined.</d:para>
    <d:para>The value of <d:code>errno</d:code> is zero at program startup, but
    is never set to zero by any library function.<d:footnote><d:para>Thus, a
    program that uses <d:code>errno</d:code> for error checking should set it
    to zero before a library function call, then inspect it before a subsequent
    library function call. Of course, a library function can save the value of
    <d:code>errno</d:code> on entry and then set it to zero, as long as the
    original value is restored if <d:code>errno</d:code>'s value is still zero
    just before the return.</d:para></d:footnote> The value of
    <d:code>errno</d:code> may be set to nonzero by a library function call
    whether or not there is an error, provided the use of
    <d:code>errno</d:code> is not documented in the description of the function
    in this International Standard.</d:para>
    <d:para>Additional macro definitions, beginning with <d:code>E</d:code> and
    a digit or <d:code>E</d:code> and an uppercase
    letter,<d:footnote><d:para>See <d:quote>future library directions</d:quote>
    (&#xa7; iso.7.31.3).</d:para></d:footnote> may also be
    specified by the implementation.</d:para>
</d:chapter>
