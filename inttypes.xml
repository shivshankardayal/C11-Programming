<d:chapter version="5.0" xmlns:d="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:mml="http://www.w3.org/1998/Math/MathML">
    <?dbhtml filename="inttypes/index.html" ?>
    <d:title>Format conversion of integer types &amp;lt;inttypes.h></d:title>
    <d:para>The header &amp;lt;inttypes.h> includes the header
    &amp;lt;stdint.h> and extends it with additional facilities provided by
    hosted implementations.</d:para>
    <d:para>It declares functions for manipulating greatest-width integers and
    converting numeric character strings to greatest-width integers, and it
    declares the type <d:code>imaxdiv_t</d:code> which is a structure type that
    is the type of the value returned by the <d:code>imaxdiv</d:code>
    function.</d:para>
    <d:para>For each type declared in &amp;lt;stdint.h>, it defines
    corresponding macros for conversion specifiers for use with the formatted
    input/output functions.</d:para>
    <d:para><d:emphasis role="bold">Forward references:</d:emphasis> integer
    types &amp;lt;stdint.h> (Integer types &amp;lt;stdint.h>), formatted
    input/output functions (Formatted input/output functions), formatted wide
    character input/output functions (Formatted wide character input/output
    functions).</d:para>
    <d:sect1>
      <d:title>Macros for format specifiers</d:title>
      <d:para>Each of the following object-like macros<d:footnote><d:para>C++
      implementations should define these macros only when
      <d:code>__STDC_FORMAT_MACROS</d:code> is defined before
      &amp;lt;inttypes.h> is included.</d:para></d:footnote> expands to a
      character string literal containing a conversion specifier, possibly
      modified by a length modifier, suitable for use within the format
      argument of a formatted input/output function when converting the
      corresponding integer type. These macro names have the general form of
      <d:code>PRI</d:code> (character string literals for the
      <d:code>fprintf</d:code> and <d:code>fwprintf</d:code> family) or
      <d:code>SCN</d:code> (character string literals for the
      <d:code>fscanf</d:code> and <d:code>fwscanf</d:code>
      family),<d:footnote><d:para>Separate macros are given for use with
      <d:code>fprintf</d:code> and <d:code>fscanf</d:code> functions because,
      in the general case, different format specifiers may be required for
      <d:code>fprintf</d:code> and <d:code>fscanf</d:code>, even when the type
      is the same.</d:para></d:footnote> followed by the conversion specifier,
      followed by a name corresponding to a similar type name in Integer
      types. In these names, <d:code>N</d:code> represents the width of the
      type as described in Integer types. For example,
      <d:code>PRIdFAST32</d:code> can be used in a format string to print the
      value of an integer of type <d:code>int_fast32_t</d:code>.</d:para>
    </d:sect1>
</d:chapter>
